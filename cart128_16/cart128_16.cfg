# cart128_16.cfg

SYMBOLS {
    __STACKSIZE__: value = $0800, type = weak; # 2k stack
}

MEMORY {
    # Zero page
    ZP:       start = $0002, size = $001A, type = rw, define = yes;

    # C128 cartridge ROM area (MID bank)
    # Can be 16K ($8000-$BFFF) or 32K ($8000-$FFFF)
    # This config is for 16K cartridge in MID area
    ROM:      start = $8000, size = $4000, file = %O, fill = yes, define = yes;

    # Available RAM areas in C128
    # Lower RAM (avoiding system areas)
    RAM:      start = $1c00, size = $6400, type = rw, define = yes;

    # High RAM area (if not using HIGH cartridge area)
    # Note: If using Kernal, this area may not be available
    HIRAM:    start = $c000, size = $1000-__STACKSIZE__, type = rw;
}

SEGMENTS {
    # Cartridge startup code - must be at $8000
    STARTUP:  load = ROM, type = ro, start = $8000;

    # Additional code segments
    LOWCODE:  load = ROM, type = ro, optional = yes;
    INIT:     load = ROM, type = ro, define = yes, optional = yes;
    CODE:     load = ROM, type = ro;
    RODATA:   load = ROM, type = ro;

    # Data segments
    DATA:     load = ROM, run = RAM, type = rw, define = yes;
    ONCE:     load = ROM, type = ro, define = yes, optional = yes;
    BSS:      load = RAM, type = bss, define = yes;
    HEAP:     load = RAM, type = bss, optional = yes;

    # High RAM data (optional)
    # BSSHI:    load = HIRAM, type = bss, define = yes, optional = yes;

    # Zero page
    ZEROPAGE: load = ZP, type = zp;

    # Padding to fill cartridge
    PADEND:   load = ROM, type = ro, start = $bfff;
}

FEATURES {
    CONDES: segment = INIT,
            type = constructor,
            label = __CONSTRUCTOR_TABLE__,
            count = __CONSTRUCTOR_COUNT__;
    CONDES: segment = RODATA,
            type = destructor,
            label = __DESTRUCTOR_TABLE__,
            count = __DESTRUCTOR_COUNT__;
    CONDES: segment = RODATA,
            type = interruptor,
            label = __INTERRUPTOR_TABLE__,
            count = __INTERRUPTOR_COUNT__;
}
